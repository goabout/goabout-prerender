#!/bin/sh

set -e

if [ "$1" = "--help" ]; then
  echo "usage: $PROGNAME [STAGE]" >&2
  echo >&2
  echo "Deploy artifact to stage STAGE. If omitted, STAGE is inferred." >&2
  exit 1
fi


# Determine current stage
if [ "$1" ]; then
  stage="$1"
elif [ "$TRAVIS_PULL_REQUEST" -a "$TRAVIS_PULL_REQUEST" != "false" ]; then
  stage="pr$TRAVIS_PULL_REQUEST"
elif [ "$TRAVIS_BRANCH" ]; then
  stage="$TRAVIS_BRANCH"
else
  stage=`git rev-parse --abbrev-ref HEAD`
fi
stage=`echo "$stage" | sed -e 's#^.*/##' | tr '.-' '_'`

# Construct current version and buildnumber

gitrev=`git rev-parse --short HEAD`
date=`date -u +"%Y%m%dT%H%M%S"`
buildnumber="$date"
version="$gitrev+$buildnumber"

bucket=goabout-artifacts
prefix=goabout-prerender/$stage



delete() {
  echo " - Deleting old goabout-prerender.zip"
  aws s3 rm s3://$bucket/$prefix/goabout-prerender.zip > /dev/null 2>&1 \
    || echo " * goabout-prerender.zip not present (yet), so not deleting"
}

put() {
  src="$1"
  dst="$2"
  ver="$3"

  md5=`openssl dgst -md5 -binary "$src" | openssl enc -base64`

  echo -n "put   : $bucket/$prefix/$dst ... "
  aws s3api put-object --bucket $bucket --key "$prefix/$dst" \
                       --body "$src" --content-md5 $md5 > /dev/null \
    && echo "done."

  if [ ! -z $ver ]; then
    echo -n "cp    : $dst $ver ..."
    aws s3api copy-object --bucket $bucket --key "$prefix/$ver" \
                          --copy-source "$bucket/$prefix/$dst" > /dev/null \
      && echo "done."

  fi
}

# Add version.txt and build the distribution package
rm -f /tmp/dist.zip
echo $version > version.txt
zip -q -r /tmp/dist.zip * -x config-local.json


echo "Deploying to $bucket/$prefix - working for stage $stage / version $version"

echo "Delete old artifacts"
delete
echo "Putting prerender..."
put /tmp/dist.zip goabout-prerender.zip "goabout-prerender-$version.zip"

